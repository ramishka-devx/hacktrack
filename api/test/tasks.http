### Variables
@baseUrl = http://localhost:3000
@contestId = 1
@taskId = 1
@authToken = your_jwt_token_here
###
POST {{baseUrl}}/api/contests/{{contestId}}/tasks
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "title": "Implement User Authentication",
  "description": "Create a secure login and registration system with JWT tokens",
  "points": 100,
  "difficulty": "medium"
}
###
POST {{baseUrl}}/api/contests/{{contestId}}/tasks
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "title": "Build REST API",
  "description": "Design and implement RESTful endpoints for the application",
  "points": 150,
  "difficulty": "hard"
}
###
POST {{baseUrl}}/api/contests/{{contestId}}/tasks
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "title": "Setup Database Schema",
  "description": "Create database tables and relationships",
  "points": 50,
  "difficulty": "easy"
}
###
GET {{baseUrl}}/api/contests/{{contestId}}/tasks?page=1&limit=10
Authorization: Bearer {{authToken}}
###
GET {{baseUrl}}/api/contests/{{contestId}}/tasks
Authorization: Bearer {{authToken}}
###
GET {{baseUrl}}/api/contests/{{contestId}}/tasks/{{taskId}}
Authorization: Bearer {{authToken}}
###
PUT {{baseUrl}}/api/contests/{{contestId}}/tasks/{{taskId}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "title": "Implement User Authentication (Updated)",
  "description": "Create a secure login and registration system with JWT tokens and password hashing",
  "points": 120,
  "difficulty": "hard"
}
###
PUT {{baseUrl}}/api/contests/{{contestId}}/tasks/{{taskId}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "points": 200,
  "difficulty": "hard"
}
###
DELETE {{baseUrl}}/api/contests/{{contestId}}/tasks/{{taskId}}
Authorization: Bearer {{authToken}}
###
GET {{baseUrl}}/api/contests/invalid/tasks
Authorization: Bearer {{authToken}}
###
GET {{baseUrl}}/api/contests/{{contestId}}/tasks/invalid
Authorization: Bearer {{authToken}}
###
POST {{baseUrl}}/api/contests/{{contestId}}/tasks
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "description": "This should fail because title is missing"
}
###
POST {{baseUrl}}/api/contests/{{contestId}}/tasks
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "title": "Test Task",
  "description": "Testing invalid difficulty",
  "points": 50,
  "difficulty": "invalid_difficulty"
}
###
POST {{baseUrl}}/api/contests/{{contestId}}/tasks
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
  "title": "Test Task",
  "description": "Testing negative points",
  "points": -10,
  "difficulty": "easy"
}
###
GET {{baseUrl}}/api/contests/{{contestId}}/tasks
###
GET {{baseUrl}}/api/contests/{{contestId}}/tasks
Authorization: Bearer invalid_token_here
### ===============================
### TASK STATISTICS ENDPOINTS
### ===============================

### Get Contest Overall Statistics
GET {{baseUrl}}/api/contests/{{contestId}}/stats/overall
Authorization: Bearer {{authToken}}

### Get Task Completion Statistics for Contest
GET {{baseUrl}}/api/contests/{{contestId}}/stats/tasks
Authorization: Bearer {{authToken}}

### Get Contest Leaderboard
GET {{baseUrl}}/api/contests/{{contestId}}/stats/leaderboard
Authorization: Bearer {{authToken}}

### Get Contest Leaderboard with Pagination
GET {{baseUrl}}/api/contests/{{contestId}}/stats/leaderboard?page=1&limit=5
Authorization: Bearer {{authToken}}

### Get Current User's Task Statistics
GET {{baseUrl}}/api/contests/{{contestId}}/stats/my-tasks
Authorization: Bearer {{authToken}}

### Get Current User's Detailed Statistics
GET {{baseUrl}}/api/contests/{{contestId}}/stats/my-stats
Authorization: Bearer {{authToken}}

### Get Specific User's Task Statistics (replace 2 with actual user_id)
GET {{baseUrl}}/api/contests/{{contestId}}/stats/users/2/tasks
Authorization: Bearer {{authToken}}

### Get Specific User's Detailed Statistics (replace 2 with actual user_id)
GET {{baseUrl}}/api/contests/{{contestId}}/stats/users/2/stats
Authorization: Bearer {{authToken}}

### ===============================
### ERROR CASES - STATISTICS
### ===============================

### Get Stats for Non-existent Contest
GET {{baseUrl}}/api/contests/999/stats/overall
Authorization: Bearer {{authToken}}

### Get Stats for Non-existent User
GET {{baseUrl}}/api/contests/{{contestId}}/stats/users/999/tasks
Authorization: Bearer {{authToken}}

### Get Stats Without Authentication
GET {{baseUrl}}/api/contests/{{contestId}}/stats/overall